#1Ô∏è‚É£ Corrigir capitaliza√ß√£o de nomes
# Dada a lista nomes = ["jo√£o silva", "maria oliveira", "carlos almeida"], 
# use map() para garantir que cada palavra do nome comece com letra mai√∫scula.

nomes = ["jo√£o silva", "maria oliveira", "carlos almeida"]

print(list(map(lambda nome: nome.upper(), nomes)))

# 2Ô∏è‚É£ Remover espa√ßos extras em uma lista de frases
# Dada a lista frases = [" Ol√° mundo ", " Python √© incr√≠vel ", " Aprendendo programa√ß√£o "], 
# use map() para remover os espa√ßos extras de cada frase.

frases = [" Ol√° mundo ", " Python √© incr√≠vel ", " Aprendendo programa√ß√£o "] 

print(list(map(lambda nome: nome.strip(), frases)))

#3Ô∏è‚É£ Corrigir um c√°lculo de percentual
# Dada a lista precos = [100, 250, 400], use map() para calcular o valor final ap√≥s um desconto de 20%.

precos = [100, 250, 400]

print(list(map(lambda preco: preco - (preco * 0.20)/ 100, precos)))

#4Ô∏è‚É£ Converter todas as palavras para min√∫sculas
# Dada a lista palavras = ["Python", "Linguagem", "PROGRAMA√á√ÉO"], 
# use map() para converter todas as palavras para letras min√∫sculas.

palavras = ["Python", "Linguagem", "PROGRAMA√á√ÉO"]

print(list(map(lambda palavra: palavra.lower(), palavras)))

# 5Ô∏è‚É£ Contar palavras corretamente
# Dada a lista frases = ["Python √© bom", "Estou aprendendo programa√ß√£o", "Fun√ß√µes s√£o √∫teis"], use map() para contar quantas palavras h√° em cada frase.

frases = ["Python √© bom", "Estou aprendendo programa√ß√£o", "Fun√ß√µes s√£o √∫teis"]

print(list(map(lambda palavra: len(palavra.split()), frases)))

#6Ô∏è‚É£ Converter temperaturas de Fahrenheit para Celsius
# Dada a lista temperaturas_fahrenheit = [32, 68, 100], use map() para convert√™-las para Celsius.
# C = (F - 32) x 5 / 9

temperaturas_fahrenheit = [32, 68, 100]

print(list(map(lambda f: (f - 32) * 5 / 9, temperaturas_fahrenheit)))

#7Ô∏è‚É£ Calcular a raiz quadrada de uma lista de n√∫meros
# Dada a lista numeros = [4, 9, 16, 25], use map() para calcular a raiz quadrada de cada n√∫mero.

# üìå Dica: O operador ** ou a fun√ß√£o math.sqrt() podem ajudar.
from math import sqrt
numeros = [4, 9, 16, 25]

print(list(map(sqrt, numeros)))

#8Ô∏è‚É£ Formatar n√∫meros de uma lista como strings
#Dada a lista numeros = [3.14159, 2.71828, 1.61803], use map() para format√°-los com apenas 2 casas decimais.

#üìå Dica: A fun√ß√£o round() pode ser √∫til.

numeros = [3.14159, 2.71828, 1.61803]

print(list(map(lambda x: round(x, 2), numeros)))

#9Ô∏è‚É£ Criar siglas a partir de frases
# Dada a lista frases = ["Python √© incr√≠vel", "Desenvolvimento Web", "Programa√ß√£o Funcional"], use map() para transformar cada frase em uma sigla.

# üìå Exemplo: "Python √© incr√≠vel" ‚Üí "PEI"

nome = 'python √© incrivel'

print(nome.split(' '))

frases = ["Python √© incr√≠vel", "Desenvolvimento Web", "Programa√ß√£o Funcional"]

print([palavra[0] for palavra in frases])

siglas = list(map(lambda frase: "".join([palavra[0].upper() for palavra in frase.split()]), frases))

print(siglas)

lista = ['brasil', 'argentina', 'alemanha', 'portugal', 'bolivia', 'italia']

siglas_paises = list(map(lambda pais: pais[:2].upper(), lista))

print(siglas_paises)
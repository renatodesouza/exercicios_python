#Use map() para gerar siglas com as primeiras letras de cada palavra.
preposicoes = ["da", "de", "do", "e"]

def gera_siglas(frase):
    return "".join([palavra[0] for palavra in frase.split() if palavra.lower() not in preposicoes])


estados = ["S√£o Paulo", "Rio de Janeiro", "Minas Gerais", "Bahia", "Paran√°"]


print(f'As siglas dos estados: {list(map(gera_siglas, estados))}')

# 2Ô∏è‚É£ Siglas de Empresas
# Dada a lista de nomes de empresas:

# empresas = ["Companhia Brasileira de Petr√≥leo", "Banco Nacional de Cr√©dito", "Associa√ß√£o de Tecnologia e Pesquisa"]
# Use map() para criar siglas com a primeira letra de cada palavra, ignorando palavras pequenas como "de", "da", "do", "e".


empresas = ["Companhia Brasileira de Petr√≥leo", "Banco Nacional de Cr√©dito", "Associa√ß√£o de Tecnologia e Pesquisa"]

print(f'As siglas das empresas √©: {list(map(gera_siglas, empresas))}')


# 3Ô∏è‚É£ Siglas de Cursos Universit√°rios
# Dada a lista de cursos:

# cursos = ["Engenharia da Computa√ß√£o", "Administra√ß√£o de Empresas", "Ci√™ncia de Dados", "Letras Portugu√™s"]
# Use map() para gerar siglas com as iniciais de cada palavra relevante.

cursos = ["Engenharia da Computa√ß√£o", "Administra√ß√£o de Empresas", "Ci√™ncia de Dados", "Letras Portugu√™s"]

print(f'As siglas dos cursos s√£o: {list(map(gera_siglas, cursos))}')

# 4Ô∏è‚É£ Siglas de Nomes Pr√≥prios
# Dada a lista de nomes completos:

# nomes = ["Carlos Eduardo da Silva", "Ana Beatriz Ramos", "Fernando Henrique Cardoso"]
# Use map() para criar siglas com as iniciais de cada nome, ignorando conectores como "da" e "de".

# üìå Exemplo esperado:

# "Carlos Eduardo da Silva" ‚Üí "CES"
# "Ana Beatriz Ramos" ‚Üí "ABR"
# "Fernando Henrique Cardoso" ‚Üí "FHC"

nomes = ["Carlos Eduardo da Silva", "Ana Beatriz Ramos", "Fernando Henrique Cardoso"]

nomes_completos = [nome[0] for nome in nomes[0].split() if nome.lower() not in preposicoes]
print("".join(nomes_completos))
print(f'O resultados √©: {nomes_completos}')


print(list(map(gera_siglas, nomes)))

# 5Ô∏è‚É£ Siglas de Pa√≠ses Compostos
# Dada a lista de nomes de pa√≠ses compostos:

# paises = ["Reino Unido", "Estados Unidos", "Nova Zel√¢ndia", "√Åfrica do Sul"]
# Use map() para criar siglas com as primeiras letras de cada palavra importante.

# üìå Exemplo esperado:

# "Reino Unido" ‚Üí "RU"
# "Estados Unidos" ‚Üí "EU"
# "Nova Zel√¢ndia" ‚Üí "NZ"
# "√Åfrica do Sul" ‚Üí "AS"

paises = ["Reino Unido", "Estados Unidos", "Nova Zel√¢ndia", "√Åfrica do Sul"]

print(list(map(lambda frase: "".join([palavra[0] for palavra in frase.split() if palavra.lower() not in preposicoes]), paises)))

#Solu√ß√£o dois

print(f'Solucao com a funcao gera_siglas: {list(map(gera_siglas, paises))}')